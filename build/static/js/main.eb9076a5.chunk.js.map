{"version":3,"sources":["components/ToDoList/style.ts","hooks/useOutsideClick.tsx","components/NewTask/style.ts","components/NewTask/index.tsx","store/actions.ts","store/index.tsx","components/EditToDo/style.ts","components/EditToDo/index.tsx","components/ToDo/style.ts","components/ToDo/index.tsx","components/ToDoList/ListItem.tsx","components/Menu/style.ts","components/Menu/index.tsx","components/ToDoList/index.tsx","pages/style.ts","pages/ToDoPage.tsx","index.tsx"],"names":["Container","styled","div","Header","MenuButton","button","ListContainer","ul","ToDoPlaceholder","EmptyText","p","useOutsideClick","ref","callback","handleClick","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","ButtonsContainer","span","ButtonBase","CancelButton","AddButton","AddTaskButton","NewTask","isOpen","setIsOpen","createTask","React","useRef","formRef","createRef","useState","content","setContent","handleClose","trim","onSubmit","event","preventDefault","focus","id","autoFocus","value","onChange","type","onClick","disabled","stopPropagation","size","todoCreated","createAction","todoEdited","todoDeleted","todoBoardChanged","boardCleared","boardFilteredAZ","boardFilteredZA","actions","allTodosCleared","todoEditModeEntered","editModeCancelled","persistConfig","key","storage","persistedReducer","persistReducer","state","boards","title","todos","editId","undefined","sort","sorted","action","produce","draft","getType","payload","board","find","todo","flatMap","newContent","oldBoard","map","includes","newBoard","filter","t","a","b","toLowerCase","localeCompare","reverse","forEach","store","createStore","composeWithDevTools","applyMiddleware","useTypedSelector","persistStore","useSelector","EditContainer","form","ButtonBaase","DeleteButton","UpdateButton","ButonsContainer","PopoverBackground","EditToDo","updateToDo","deleteToDo","cancelEditMode","tempValue","setTemp","ReactDOM","createPortal","body","onFocus","select","rows","onKeyDown","keyCode","shiftKey","EditButton","ToDo","editToDo","isOver","setIsOver","useDrag","item","collect","monitor","opacity","isDragging","drag","onMouseEnter","onMouseLeave","ListItem","dispatch","useDispatch","isInEditMode","style","position","List","li","Menu","items","isMenuOpen","setIsMenuOpen","index","label","ToDoList","onDrop","useDrop","drop","accept","canDrop","length","uuid","ToDoPage","clearGroup","rootElement","getElementById","render","StrictMode","DndProvider","backend","HTML5Backend"],"mappings":"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","file":"static/js/main.eb9076a5.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  color: #fff;\n  background: rgba(255, 255, 255, 0.6);\n  border-radius: 4px;\n  margin: 5px;\n  font-family: Roboto, Arial, sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  color: #000;\n  flex:1;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 0 10px 0;\n  h3 {\n    margin: 0;\n  }\n`;\n\nexport const MenuButton = styled.button`\n  padding: 0;\n  border: none;\n  cursor: pointer;\n  background: none;\n  svg {\n    height: 22px;\n    width: 22px;\n  }\n`;\n\nexport const ListContainer = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const ToDoPlaceholder = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  padding: 20px;\n  background: #c3d3dc;\n  letter-spacing: 0.01428571em;\n  font-family: Roboto, Arial, sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.25rem;\n  color: #000;\n`;\n\nexport const EmptyText = styled.p`\n  font-style: italic;\n`;\n","import { useEffect } from \"react\";\n\n// Found here: https://medium.com/@kevinfelisilda/click-outside-element-event-using-react-hooks-2c540814b661, modified to TS\n\nexport const useOutsideClick = (ref: any, callback: any) => {\n  const handleClick = (e: any) => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      callback();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  padding: 20px;\n  background: #fff;\n  border-radius: 4px;\n  letter-spacing: 0.01428571em;\n  font-family: Roboto, Arial, sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.25rem;\n  color: #000;\n  input {\n    width: 100%;\n    outline: none;\n    border: none;\n  }\n`;\n\nexport const ButtonsContainer = styled.span`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ButtonBase = styled.button`\n  padding: 8px 16px;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const CancelButton = styled(ButtonBase)`\n  color: #000;\n  border: none;\n  background: none;\n  font-weight: bold;\n  font-family: Roboto, Arial, sans-serif;\n`;\n\nexport const AddButton = styled(ButtonBase)`\n  background: #4caf50;\n  :disabled {\n    opacity: 0.5;\n  }\n`;\n\nexport const AddTaskButton = styled.button`\n  padding: 0;\n  align-self: flex-end;\n  display: flex;\n  background: transparent;\n  align-items: center;\n  cursor: pointer;\n  color: #000;\n  border: none;\n  transition: 0.3s;\n  font-weight: bold;\n  font-family: Roboto, Arial, sans-serif;\n  svg {\n    margin-left: 5px;\n  }\n`;\n","import React, { createRef, useState } from \"react\";\nimport { MdLibraryAdd } from \"react-icons/md\";\nimport { useOutsideClick } from \"../../hooks/useOutsideClick\";\nimport {\n  AddButton,\n  AddTaskButton,\n  Container,\n  CancelButton,\n  ButtonsContainer,\n} from \"./style\";\n\nexport const NewTask: React.FC<{\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  createTask: (content: string) => void;\n}> = ({ isOpen, setIsOpen, createTask }) => {\n  const ref = React.useRef<HTMLInputElement>(null);\n  const formRef = createRef<HTMLFormElement>();\n  const [content, setContent] = useState(\"\");\n\n  const handleClose = () => {\n    setIsOpen(false);\n    setContent(\"\");\n  };\n\n  useOutsideClick(formRef, () => {\n    if (content) createTask(content.trim());\n    handleClose();\n  });\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    setIsOpen(true);\n    ref.current?.focus();\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (content.trim()) {\n      createTask(content.trim());\n      handleClose();\n    } else {\n      ref.current?.focus();\n    }\n  };\n\n  return isOpen ? (\n    <>\n      <form onSubmit={handleSubmit} ref={formRef}>\n        <Container>\n          <input\n            id=\"newTaskInput\"\n            autoFocus\n            ref={ref}\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n          ></input>\n        </Container>\n        <ButtonsContainer>\n          <CancelButton type=\"button\" onClick={handleClose}>\n            Cancel\n          </CancelButton>\n          <AddButton id=\"addButton\" type=\"submit\" disabled={!content.trim()}>\n            Add\n          </AddButton>\n        </ButtonsContainer>\n      </form>\n    </>\n  ) : (\n    <AddTaskButton onClick={handleClick} id=\"newTaskButton\">\n      New Task\n      <MdLibraryAdd size=\"22px\" />\n    </AddTaskButton>\n  );\n};\n","import { ActionType, createAction } from \"typesafe-actions\";\nimport { ToDo } from \"./types\";\n\nconst todoCreated = createAction(\"todo created\")<{\n  todo: ToDo;\n  board: string;\n}>();\nconst todoEdited = createAction(\"todo edited\")<{\n  id: string;\n  newContent: string;\n}>();\nconst todoDeleted = createAction(\"todo deleted\")<string>();\nconst todoBoardChanged = createAction(\"todo board changed\")<{\n  id: string;\n  newBoard: string;\n}>();\nconst boardCleared = createAction(\"board cleared\")<string>();\nconst boardFilteredAZ = createAction(\"board filtered a-z\")<string>();\nconst boardFilteredZA = createAction(\"board filtered z-a\")<string>();\nconst allTodosCleared = createAction(\"all todos cleared\")<void>();\nconst todoEditModeEntered = createAction(\"todo edit mode entered\")<string>();\nconst editModeCancelled = createAction(\"edit mode cancelled\")();\n\nexport const actions = {\n  todoCreated,\n  todoEdited,\n  todoDeleted,\n  todoBoardChanged,\n  boardCleared,\n  allTodosCleared,\n  todoEditModeEntered,\n  editModeCancelled,\n  boardFilteredAZ,\n  boardFilteredZA,\n};\n\nexport type Actions = ActionType<typeof actions>;\n","import { Actions, actions } from \"./actions\";\nimport { Reducer, createStore, applyMiddleware } from \"redux\";\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport produce from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { Board } from \"./types\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst initialState = () => ({\n  boards: [\n    { id: \"1\", title: \"Life changing\", todos: [] },\n    { id: \"2\", title: \"Important\", todos: [] },\n    { id: \"3\", title: \"Meh\", todos: [] },\n  ] as Board[],\n  editId: undefined as undefined | string,\n  sort: \"Index\",\n  sorted: false,\n});\n\nexport type State = Readonly<ReturnType<typeof initialState>>;\n\nexport const rootReducer: Reducer<State, Actions> = (\n  state = initialState(),\n  action: Actions\n) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case getType(actions.todoEditModeEntered):\n        draft.editId = action.payload;\n        break;\n\n      case getType(actions.editModeCancelled):\n        draft.editId = undefined;\n        break;\n\n      case getType(actions.todoCreated): {\n        const board = draft.boards.find(\n          (board) => board.id === action.payload.board\n        );\n        if (board) {\n          board.todos = [...board.todos, action.payload.todo];\n        }\n        break;\n      }\n\n      case getType(actions.todoEdited): {\n        const todo = draft.boards\n          .flatMap((board) => board.todos)\n          .find((todo) => todo.id === action.payload.id);\n        if (todo) todo.content = action.payload.newContent;\n        draft.editId = undefined;\n        break;\n      }\n\n      case getType(actions.todoBoardChanged): {\n        const oldBoard = draft.boards.find((board) =>\n          board.todos.map((todo) => todo.id).includes(action.payload.id)\n        )!;\n        const todo = oldBoard.todos.find(\n          (todo) => todo.id === action.payload.id\n        );\n        if (todo && oldBoard) {\n          const newBoard = draft.boards.find(\n            (board) => board.id === action.payload.newBoard\n          );\n          oldBoard.todos = [...oldBoard.todos.filter((t) => t.id !== todo.id)];\n          if (newBoard) newBoard.todos = [...newBoard.todos, todo];\n        }\n        break;\n      }\n\n      case getType(actions.todoDeleted): {\n        const board = draft.boards.find((board) =>\n          board.todos.map((todo) => todo.id).includes(action.payload)\n        )!;\n        board.todos = board.todos.filter((todo) => todo.id !== action.payload);\n        break;\n      }\n\n      case getType(actions.boardCleared):\n        const board = draft.boards.find((board) => board.id === action.payload);\n        if (board) board.todos = [];\n        break;\n\n      case getType(actions.boardFilteredAZ): {\n        const board = draft.boards.find((board) => board.id === action.payload);\n        if (board) {\n          board.todos = [\n            ...board.todos.sort((a, b) =>\n              a.content.toLowerCase().localeCompare(b.content.toLowerCase())\n            ),\n          ];\n        }\n        break;\n      }\n\n      case getType(actions.boardFilteredZA): {\n        const board = draft.boards.find((board) => board.id === action.payload);\n        if (board) {\n          board.todos = [\n            ...board.todos.sort((a, b) =>\n              a.content.toLowerCase().localeCompare(b.content.toLowerCase())\n            ),\n          ].reverse();\n        }\n        break;\n      }\n\n      case getType(actions.allTodosCleared):\n        draft.boards.forEach((board) => (board.todos = []));\n        break;\n    }\n  });\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware())\n);\n//@ts-ignore\nexport const persistor = persistStore(store); // bad practice with the ignore above, but typescript error was taking up too much time.\n\nexport const useTypedSelector: TypedUseSelectorHook<State> = useSelector;\n","import styled from \"styled-components\";\n\nexport const EditContainer = styled.form`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  z-index: 4;\n  top: 0;\n  width: 100%;\n  textarea {\n    flex: 1;\n    letter-spacing: 0.01428571em;\n    font-family: Roboto, Arial, sans-serif;\n    font-size: 0.875rem;\n    font-weight: 400;\n    line-height: 1.25rem;\n    outline: none;\n    focus: none;\n    resize: none;\n    border: none;\n    padding: 20px;\n    border-radius: 4px 4px 0 4px;\n  }\n\n`;\n\nconst ButtonBaase = styled.button`\n  background: #4caf50;\n  padding: 8px 16px;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n`;\nexport const CancelButton = styled(ButtonBaase)`\nbackground: #d2d2d2;\ncolor: #000;\n`;\n\nexport const DeleteButton = styled(ButtonBaase)`\nbackground: #f44336;\n`;\n\nexport const UpdateButton = styled(ButtonBaase)`\nbackground: #4caf50;\n`;\n\nexport const ButonsContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const PopoverBackground = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.7);\n  top: 0;\n  left: 0;\n  zindex: 3;\n`;\n","import React, { createRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useOutsideClick } from \"../../hooks/useOutsideClick\";\nimport {\n  EditContainer,\n  PopoverBackground,\n  ButonsContainer,\n  CancelButton,\n  UpdateButton,\n  DeleteButton,\n} from \"./style\";\n\nexport const EditToDo: React.FC<{\n  content: string;\n  updateToDo: (newContent: string) => void;\n  deleteToDo: () => void;\n  cancelEditMode: () => void;\n}> = ({ content, updateToDo, deleteToDo, cancelEditMode }) => {\n  const [tempValue, setTemp] = React.useState(content);\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (tempValue.trim()) updateToDo(tempValue.trim());\n  };\n  const handleKeydown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      e.preventDefault();\n      updateToDo(tempValue);\n    }\n  };\n\n  const ref = createRef<HTMLFormElement>();\n  useOutsideClick(ref, () => {\n    cancelEditMode();\n  });\n\n  return (\n    <>\n      {ReactDOM.createPortal(<PopoverBackground />, document.body)}\n      <EditContainer onSubmit={handleSubmit} ref={ref}>\n        <textarea\n          autoFocus\n          onFocus={(e) => e.target.select()}\n          value={tempValue}\n          rows={5}\n          onChange={(e) => setTemp(e.target.value)}\n          onKeyDown={handleKeydown}\n        ></textarea>\n        <ButonsContainer>\n          <CancelButton type=\"button\" onClick={cancelEditMode}>\n            Cancel\n          </CancelButton>\n          <DeleteButton type=\"button\" onClick={deleteToDo}>\n            Delete\n          </DeleteButton>\n          <UpdateButton type=\"submit\" disabled={!tempValue.trim()}>\n            Update\n          </UpdateButton>\n        </ButonsContainer>\n      </EditContainer>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  padding: 20px;\n  background: #fff;\n  border-radius: 4px;\n  letter-spacing: 0.01428571em;\n  font-family: Roboto, Arial, sans-serif;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.25rem;\n  color: #000;\n  align-items: flex-start;\n  cursor: pointer;\n  p {\n    flex: 1;\n    margin: 0;\n  }\n`;\n\nexport const EditButton = styled.button`\n  position: absolute;\n  right: 0;\n  background: none;\n  border: none;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: 0.3s;\n  background: none;\n  svg {\n    height: 22px;\n    width: 22px;\n  }\n  :hover {\n    opacity: 1;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { ToDo as ToDoType } from \"../../store/types\";\nimport { useDrag } from \"react-dnd\";\nimport { Container, EditButton } from \"./style\";\nimport { MdEdit } from \"react-icons/md\";\n\nexport const ToDo: React.FC<{\n  todo: ToDoType;\n  editToDo: () => void;\n}> = ({ todo: { content, id }, editToDo }) => {\n  const [isOver, setIsOver] = useState(false);\n  const [, drag] = useDrag({\n    item: { id, type: \"*\" },\n    collect: (monitor: { isDragging: () => any }) => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n    }),\n  });\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    editToDo();\n  };\n  return (\n    <Container\n      ref={drag}\n      onMouseEnter={() => setIsOver(true)}\n      onMouseLeave={() => setIsOver(false)}\n    >\n      <p>{content}</p>\n      {isOver && (\n        <EditButton onClick={handleClick}>\n          <MdEdit />\n        </EditButton>\n      )}\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useTypedSelector } from \"../../store\";\nimport { ToDo as ToDoType } from \"../../store/types\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\nimport { EditToDo } from \"../EditToDo\";\nimport { ToDo } from \"../ToDo\";\n\nexport const ListItem: React.FC<{\n  todo: ToDoType;\n}> = ({ todo }) => {\n  const dispatch = useDispatch();\n  const isInEditMode = useTypedSelector((state) => state.editId === todo.id);\n\n  return (\n    <div style={{ position: \"relative\" }} id=\"listItem\">\n      <ToDo\n        todo={todo}\n        editToDo={() => dispatch(actions.todoEditModeEntered(todo.id))}\n      />\n      {isInEditMode && (\n        <EditToDo\n          content={todo.content}\n          updateToDo={(newContent) =>\n            dispatch(actions.todoEdited({ id: todo.id, newContent }))\n          }\n          deleteToDo={() => dispatch(actions.todoDeleted(todo.id))}\n          cancelEditMode={() => dispatch(actions.editModeCancelled())}\n        />\n      )}\n    </div>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: relative;\n`;\nexport const List = styled.ul`\n  position: absolute;\n  padding: 0;\n  list-style: none;\n  background: #fff;\n  z-index: 2;\n  margin: 0;\n  right: 0;\n  box-shadow: 0px 5px 5px -3px rgb(0 0 0 / 20%),\n    0px 8px 10px 1px rgb(0 0 0 / 14%), 0px 3px 14px 2px rgb(0 0 0 / 12%);\n`;\n\nexport const ListItem = styled.li`\n  cursor: pointer;\n  white-space: nowrap;\n  padding: 10px;\n  :hover{\n      background:#efefef;\n  }\n`;\n","import React, { createRef } from \"react\";\nimport { MdMoreHoriz } from \"react-icons/md\";\nimport { useOutsideClick } from \"../../hooks/useOutsideClick\";\nimport { MenuItem } from \"../../store/types\";\nimport { MenuButton } from \"../ToDoList/style\";\nimport { Container, List, ListItem } from \"./style\";\n\nexport const Menu: React.FC<{ items: MenuItem[] }> = ({ items }) => {\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n  const ref = createRef<HTMLDivElement>();\n  useOutsideClick(ref, () => {\n    setIsMenuOpen(false);\n  });\n\n  return (\n    <Container ref={ref}>\n      <MenuButton onClick={() => setIsMenuOpen(!isMenuOpen)}>\n        <MdMoreHoriz />\n      </MenuButton>\n      {isMenuOpen && (\n        <List>\n          {items.map((item, index) => (\n            <ListItem\n              key={index}\n              onClick={() => {\n                item.onClick();\n                setIsMenuOpen(false);\n              }}\n            >\n              {item.label}\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { Board } from \"../../store/types\";\nimport { useDrop } from \"react-dnd\";\nimport {\n  Container,\n  EmptyText,\n  Header,\n  ListContainer,\n  ToDoPlaceholder,\n} from \"./style\";\nimport { NewTask } from \"../NewTask\";\nimport { actions } from \"../../store/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { v4 as uuid } from \"uuid\";\nimport { ListItem } from \"./ListItem\";\nimport { Menu } from \"../Menu\";\n\nexport const ToDoList: React.FC<{\n  board: Board;\n  onDrop: (item: any) => void;\n  clearGroup: () => void;\n}> = ({ board: { id, title, todos }, onDrop }) => {\n  const dispatch = useDispatch();\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [{ isOver }, drop] = useDrop({\n    drop: onDrop,\n    accept: \"*\",\n    collect: (monitor: { isOver: () => any; canDrop: () => any }) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n\n  const items = [\n    {\n      label: \"Clear board\",\n      onClick: () => dispatch(actions.boardCleared(id)),\n    },\n    {\n      label: \"Filter A-Z\",\n      onClick: () => dispatch(actions.boardFilteredAZ(id)),\n    },\n    {\n      label: \"Filter Z-A\",\n      onClick: () => dispatch(actions.boardFilteredZA(id)),\n    },\n  ];\n  return (\n    <Container ref={drop}>\n      <Header>\n        <h3>{title}</h3>\n        <Menu items={items} />\n      </Header>\n      <ListContainer id=\"listContainer\">\n        {todos.map((todo) => (\n          <ListItem key={todo.id} todo={todo} />\n        ))}\n        {isOver && <ToDoPlaceholder />}\n        {todos.length < 1 && !isOpen && !isOver && (\n          <EmptyText>No tasks to show</EmptyText>\n        )}\n        <NewTask\n          isOpen={isOpen}\n          setIsOpen={setIsOpen}\n          createTask={(content) =>\n            dispatch(\n              actions.todoCreated({ todo: { id: uuid(), content }, board: id })\n            )\n          }\n        />\n      </ListContainer>\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: start;\n\n  @media (max-width: 560px) {\n    flex-direction: column;\n    align-items: stretch;\n  }\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ToDoList } from \"../components/ToDoList\";\nimport { useTypedSelector } from \"../store\";\nimport { actions } from \"../store/actions\";\nimport { Container } from \"./style\";\n\nexport const ToDoPage: React.FC<{}> = () => {\n  const dispatch = useDispatch();\n  const boards = useTypedSelector((state) => state.boards);\n  return (\n    <Container>\n      {boards.map((board) => (\n        <ToDoList\n          key={board.id}\n          board={board}\n          clearGroup={() => dispatch(actions.boardCleared(board.id))}\n          onDrop={(item) =>\n            dispatch(\n              actions.todoBoardChanged({\n                newBoard: board.id,\n                id: item.id,\n              })\n            )\n          }\n        />\n      ))}\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ToDoPage } from \"./pages/ToDoPage\";\nimport { store } from \"./store\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport \"./style.css\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <DndProvider backend={HTML5Backend}>\n        <ToDoPage />\n      </DndProvider>\n    </Provider>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}